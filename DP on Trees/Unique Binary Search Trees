class Solution {
public:
    int solveMemo(int n, vector<int> &dp){
        if(n <= 1) return 1;
        
        if(dp[n] != -1) return dp[n];
        int ans = 0;
        for(int i = 1; i <= n; i++){
            ans += solveMemo(i-1, dp) * solveMemo(n-i, dp);
        }
        
        return dp[n] = ans;
    }
    
    int solveTab(int n){
        vector<int> dp(n+1, 0);
        dp[0] = 1;
        dp[1] = 1;
        int ans = 0;
        
        // i is for recursion and j is for the root node
        for(int i = 2; i <= n; i++){
            for(int j = 1; j <= i; j++){
                dp[i] += dp[j-1] * dp[i-j];
            }
        }
        return dp[n];
    }
    
    int numTrees(int n) {
        vector<int> dp(n+1, -1);
        // return solveMemo(n, dp);
        return solveTab(n);
    }
};
